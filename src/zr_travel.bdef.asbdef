managed implementation in class ZBP_R_TRAVEL unique;
strict ( 2 );
with draft;
extensible;
define behavior for ZR_TRAVEL alias Travel
persistent table ZTRAVEL
extensible
draft table ZTRAVEL_D
etag master LocalLastChangedAt
lock master total etag LastChangedAt
authorization master( global )

{
  field ( readonly )
   Uuid,
   LocalCreatedBy,
   LocalCreatedAt,
   LocalLastChangedBy,
   LocalLastChangedAt,
   LastChangedAt;

  field ( numbering : managed )
   Uuid;


  create;
  update;
  delete;

  draft action Activate optimized;
  draft action Discard;
  draft action Edit;
  draft action Resume;
  draft determine action Prepare;

  mapping for ZTRAVEL corresponding extensible
  {
    Uuid = uuid;
    AgencyId = agency_id;
    CustomerId = customer_id;
    BeginDate = begin_date;
    EndDate = end_date;
    BookingFee = booking_fee;
    TotalPrice = total_price;
    CurrencyCode = currency_code;
    Description = description;
    Status = status;
    Destination = destination;
    LocalCreatedBy = local_created_by;
    LocalCreatedAt = local_created_at;
    LocalLastChangedBy = local_last_changed_by;
    LocalLastChangedAt = local_last_changed_at;
    LastChangedAt = last_changed_at;
  }

  association _Booking { create; with draft; }

}

define behavior for ZR_BOOKING alias Booking
persistent table ZBOOKING
extensible
draft table ZBOOKING_D
etag dependent by _Travel
lock dependent by _Travel
authorization dependent by _Travel

{
  field ( readonly )
   Uuid,
   ParentUuid;

  field ( numbering : managed )
   Uuid;


  update;
  delete;

  mapping for ZBOOKING corresponding extensible
  {
    Uuid = uuid;
    ParentUuid = parent_uuid;
    BookingDate = booking_date;
    CustomerId = customer_id;
    CarrierId = carrier_id;
    ConnectionId = connection_id;
    FlightDate = flight_date;
    FlightPrice = flight_price;
    CurrencyCode = currency_code;
    DiscountedFlightPrice = discounted_flight_price;
  }

  association _Travel { with draft; }

}